;; -*- emacs-lisp -*-
(setq mew-summary-mode-hook
      '(lambda ()
	 (local-set-key "\C-h" 'mew-summary-prev-page)
	 ))

(setq mew-ssl-verify-level 0
      ;; Does not bring mail automatically at booting time
      mew-auto-get nil
      ;; Leave mail of pop server after get mail
      mew-pop-delete nil
      ;; Add extension ".mew"
      mew-use-suffix t
      ;; Manage unread topic
      mew-use-unread-mark t
      ;; Spam configuration
      mew-spam: "X-Spam-Flag:"
      mew-inbox-action-alist
      '(("X-Spam-Flag:" mew-spam-assassin-or-bsfilter))
      ;; Register password briefly
      mew-use-cached-passwd t
      ;; Does not bring mail at booting time
      mew-auto-get nil
      ;; For Biff
      mew-use-biff t
      mew-use-biff-bell t  ; use alarm
      mew-biff-interval 10 ; minute
      mew-biff-function 'my/biff-function
      ;mew-summary-form '(type (5 date) " " (25 from) " " t (45 subj))
      mew-summary-form '(type (5 date) " " (25 from) " " t (-1 subj))
      mew-imap-size 0
      )

(defvar mew/gmail-default-alist
  `(("proto"             . "%")
    ("name"              . "Shigeru Yoshida")
    ("user"              . "yshigeru")
    ("imap-user"         . "yshigeru")
    ("mail-domain"       . "gmail.com")
    ("imap-trash-folder" . "%[Gmail]/ゴミ箱")
    ("imap-spam-folder"  . "%[Gmail]/迷惑メール")
    ("fcc"               . "%[Gmail]/送信済みメール")
    ("imap-server"       . "imap.gmail.com")
    ("imap-auth"         . t)
    ("imap-ssl"          . t)
    ("imap-ssl-port"     . "993")
    ("smtp-auth"         . t)
    ("smtp-ssl"          . t)
    ("smtp-ssl-port"     . "465")
    ("smtp-server"       . "smtp.gmail.com")
    ("use-smtp-auth"     . t)
    ("dcc"               . "yshigeru@gmail.com")
    ))

(defvar mew/gmail-lkml-alist
  `(("proto"             . "%")
    ("name"              . "Shigeru Yoshida")
    ("user"              . "shigeru.yoshida")
    ("imap-user"         . "shigeru.yoshida")
    ("mail-domain"       . "gmail.com")
    ("imap-trash-folder" . "%[Gmail]/ゴミ箱")
    ("imap-spam-folder"  . "%[Gmail]/迷惑メール")
    ("fcc"               . "%[Gmail]/送信済みメール")
    ("imap-server"       . "imap.gmail.com")
    ("imap-auth"         . t)
    ("imap-ssl"          . t)
    ("imap-ssl-port"     . "993")
    ("smtp-auth"         . t)
    ("smtp-ssl"          . t)
    ("smtp-ssl-port"     . "465")
    ("smtp-server"       . "smtp.gmail.com")
    ("use-smtp-auth"     . t)
    ("dcc"               . "shigeru.yoshida@gmail.com")
    ))

(defvar mew/gmail-miracle-alist
  `(("proto"             . "%")
    ("name"              . "Shigeru Yoshida")
    ("user"              . "shigeru.yoshida")
    ("imap-user"         . "shigeru.yoshida@miraclelinux.com")
    ("mail-domain"       . "miraclelinux.com")
    ("imap-trash-folder" . "%[Gmail]/ゴミ箱")
    ("imap-spam-folder"  . "%[Gmail]/迷惑メール")
    ("fcc"               . "%[Gmail]/送信済みメール")
    ("imap-server"       . "imap.googlemail.com")
    ("imap-auth"         . t)
    ("imap-ssl"          . t)
    ("imap-ssl-port"     . "993")
    ("smtp-auth"         . t)
    ("smtp-ssl"          . t)
    ("smtp-ssl-port"     . "465")
    ("smtp-server"       . "smtp.googlemail.com")
    ("use-smtp-auth"     . t)
    ("dcc"               . "shigeru.yoshida@miraclelinux.com")
    ))

(defvar mew/windriver-exchange-alist
  `(("proto"             . "%")
    ("name"              . "Shigeru Yoshida")
    ("user"              . "shigeru.yoshida")
    ("mail-domain"       . "windriver.com")
    ("imap-user"         . "CORP\\syoshida")
    ("imap-server"       . "localhost")
    ("imap-port"         . "1143")
    ("imap-ssl"          . nil)
    ("imap-auth"         . t)
    ("imap-trash-folder" . "%Trash")
    ("imap-spam-folder"  . "%Junk")
    ;("fcc"               . "%Sent")
    ("smtp-user"         . "CORP\\syoshida")
    ("smtp-server"       . "localhost")
    ("smtp-port"         . "1025")
    ("smtp-ssl"          . nil)
    ("smtp-auth"         . t)
    ("dcc"               . "shigeru.yoshida@windriver.com")
    ))

;; Switch to account by types "C" and renew summary by types "i"
(setq mew-config-alist
      (list `("default" ,@mew/gmail-lkml-alist)
	    `("gmail" ,@mew/gmail-default-alist)
	    `("miracle" ,@mew/gmail-miracle-alist)
	    `("windriver" ,@mew/windriver-exchange-alist)
	    ))

(setq mew-refile-guess-alist
      '(("To:"
	 ("linux-kernel@vger.kernel.org"	"%LKML")
	 ("oki-ppc-support@miraclelinux.com"	"%沖/MPC8548")
	 ("oki-p2020-support@miraclelinux.com"	"%沖/P2020")
	 ("dev-oki-ppc@miraclelinux.com"	"%沖/P2020")
	 ("dev-oki-ppc@miraclelinux.com"	"%沖/MPC8548")
	 ("dev-oki-cgl@miraclelinux.com"	"%沖/CGL")
	 ("oki-cgl-support@miraclelinux.com"	"%沖/CGL")
	 ("nec-atc-support@miraclelinux.com"	"%NEC/航空管制")
	 ("nec-ft-tech@miraclelinux.com"	"%NEC/FT")
	 )
	("Cc:"
	 ("linux-kernel@vger.kernel.org"	"%LKML")
	 ("oki-ppc-support@miraclelinux.com"	"%沖/MPC8548")
	 ("oki-p2020-support@miraclelinux.com"	"%沖/P2020")
	 ("dev-oki-ppc@miraclelinux.com"	"%沖/P2020")
	 ("dev-oki-ppc@miraclelinux.com"	"%沖/MPC8548")
	 ("dev-oki-cgl@miraclelinux.com"	"%沖/CGL")
	 ("oki-cgl-support@miraclelinux.com"	"%沖/CGL")
	 ("nec-atc-support@miraclelinux.com"	"%NEC/航空管制")
	 ("nec-ft-tech@miraclelinux.com"	"%NEC/FT")
	 )
	(t "%[Gmail]/すべてのメール")
	))

(defadvice mew-input-folder-search-forward-1
  (around
   mew-input-folder-search-forward-1-with-migemo
   activate)
  "migemo を使ってフォルダ名を検索する。"
  (let ((migemo-do-isearch t))
    ad-do-it))

(defvar mew-refile-guess-control
  '(mew-refile-ctrl-auto-boundary
    mew-refile-guess-by-alist
    mew-refile-ctrl-throw
    mew-refile-guess-by-newsgroups
    mew-refile-guess-by-folder
    mew-refile-ctrl-throw
    mew-refile-guess-by-thread
    mew-refile-ctrl-throw
    mew-refile-guess-by-from-folder
    mew-refile-ctrl-throw
    mew-refile-guess-by-from
    mew-refile-ctrl-throw
    mew-refile-guess-by-default))

(setq mew-cite-fields '("Date:" "From:"))
(setq mew-cite-format "On %s %s wrote:\n")
